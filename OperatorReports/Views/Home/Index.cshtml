<h2>Operator Report</h2>
<div class="row">
    <div class="col-sm-12">
        <form id="table-filters" class="form-inline">
            <div class="form-group">
                <label>Website:</label>
                <select id="select-website" class="form-control" name="sw"></select>
            </div>
            <div class="form-group">
                <label>Device:</label>
                <select id="select-device" class="form-control" name="sd"></select>
            </div>
            <div class="form-group form-check form-check-inline">
                <label>Date:</label>
                <input type="radio" class="radio-date-type form-check-input" name="dateType" value="pre-defined" checked>
                <label class="form-check-label">Pre-defined</label>
                <input type="radio" class="radio-date-type form-check-input" name="dateType" value="custom">
                <label class="form-check-label">Custom</label>
            </div>
            <div id="predefined-dates" class="form-group predefined-dates">
                <select id="select-predefined-date" class="form-control" name="sdate">
                    <option value="">Select a date</option>
                    <option value="Today">Today</option>
                    <option value="Yesterday">Yesterday</option>
                    <option value="ThisWeek">This Week</option>
                    <option value="LastWeek">Last Week</option>
                    <option value="ThisMonth">This Month</option>
                    <option value="LastMonth">Last Month</option>
                    <option value="ThisYear">This Year</option>
                    <option value="LastYear">Last Year</option>
                </select>
            </div>
            <div id="custom-dates" class="form-group hidden">
                <label>From:</label>
                <input type="text" id="input-date-from" class="form-control date-picker" name="from" />
                <label>To:</label>
                <input type="text" id="input-date-to" class="form-control date-picker" name="to" />
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary float-left" onclick="javascript: ReportsCtrl.updateTable();">UPDATE</button>
                <button type="button" class="btn btn-primary float-left" onclick="javascript: ReportsCtrl.exportTable();">EXPORT</button>
            </div>
        </form>
    </div>
</div>
<div id="loader" class="alert alert-info">
    <strong>Loading data...</strong>
</div>
<div class="table">
    <div class="thead">
        <div class="tr">
            <div class="th">S.No.</div>
            <div class="th">Operator Name</div>
            <div class="th">Proactive Sent</div>
            <div class="th">Proactive Answered</div>
            <div class="th">Proactive Response Rate</div>
            <div class="th">Reactive Received</div>
            <div class="th">Reactive Answered</div>
            <div class="th">Reactive Response Rate</div>
            <div class="th">Total Chat Length</div>
            <div class="th">Average Chat Length</div>
        </div>
    </div>
    <div class="tbody">
    </div>
</div>
<script type="text/javascript">
    var ReportsCtrl = ReportsCtrl || {};

    ReportsCtrl = (function ($) {
        'use strict';

        var baseEndPoint = 'http://localhost:12783/api';

        var init = function () {
            loadWebsites();
            loadDevices();
            loadTable();
        }

        var addRows = function (data) {
            var columns = ['ID', 'Name', 'ProactiveSent', 'ProactiveAnswered', 'ProactiveResponseRate', 'ReactiveReceived', 'ReactiveAnswered', 'ReactiveResponseRate', 'TotalChatLength', 'AverageChatLength'];
            var output = '';

            $('.table .tbody').html('');
            $('#loader').removeClass('hidden');

            data.forEach(row => {
                output += `<div class="tr">`;
                columns.forEach((column, index) => {
                    if (index == 4 || index == 7) {
                        output += `<div class="td">${row[column] == 0 ? '-' : row[column] + '%'}</div>`;
                    } else {
                        output += `<div class="td">${row[column] == 0 ? '-' : row[column]}</div>`;
                    }
                });
                output += `</div>`;
            });

            $('.table .tbody').html(output);
            $('#loader').addClass('hidden');
        }

        var s2ab = function (s) {
            var buf = new ArrayBuffer(s.length);
            var view = new Uint8Array(buf);
            for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
            return buf;
        }

        var saveAs = function (filename, data, type) {
            var a = $('<a style="display: none;" />');
            var url = window.URL.createObjectURL(new Blob([s2ab(atob(data))], { type: type }));
            a.attr('href', url).attr('download', filename);
            $('body').append(a);
            a[0].click();
            window.URL.revokeObjectURL(url);
            a.remove();
        }

        var loadSelect = function (el, data, emptyStr) {
            var str = `<option value="">${emptyStr}</option>`;

            data.forEach(row => {
                str += `<option value="${row}">${row}</option>`;
            })

            $(el).html(str);
        }

        var loadWebsites = function () {
            $.get(`${baseEndPoint}/reports/websites`, data => {
                loadSelect('#select-website', data, 'Select a website');
            });
        }

        var loadDevices = function () {
            $.get(`${baseEndPoint}/reports/devices`, data => {
                loadSelect('#select-device', data, 'Select a device');
            });
        }

        var loadTable = function () {
            $.get(`${baseEndPoint}/reports`, data => {
                addRows(data);
            });
        }

        var updateTable = function () {
            var params = $('#table-filters').serialize();
            $.get(`${baseEndPoint}/reports?${params}`, data => {
                addRows(data);
            });
        }

        var exportTable = function () {
            var params = $('#table-filters').serialize();
            $.get(`${baseEndPoint}/reports/excel?${params}`, data => {
                saveAs('Operator Productivity Report.xlsx', data, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
            });
        }

        return {
            init: init,
            updateTable: updateTable,
            exportTable: exportTable
        }
    })(jQuery);

    $(document).ready(function () {
        ReportsCtrl.init();

        $('.radio-date-type').on('change', function (e) {
            if ($(this).val() == "custom") {
                $('#select-predefined-date').val('');
            } else {
                $('#input-date-from').val('');
                $('#input-date-to').val('');
            }

            $('#predefined-dates').toggleClass('hidden');
            $('#custom-dates').toggleClass('hidden');
        });

        $('.date-picker').datetimepicker({ format: 'YYYY-MM-DD' });
    });
</script>
